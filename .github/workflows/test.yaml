name: Django ChatBotAI Test CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 15s
          --health-timeout 10s
          --health-retries 20

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y build-essential python3.11-dev libpq-dev

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Wait for PostgreSQL to be ready
        run: |
          RETRY_COUNT=20
          until [ $RETRY_COUNT -le 0 ] || docker inspect --format='{{.State.Health.Status}}' $(docker ps -q --filter "ancestor=postgres:latest") | grep -q 'healthy'; do
            echo "Waiting for PostgreSQL to be healthy..."
            sleep 10
            RETRY_COUNT=$((RETRY_COUNT-1))
          done
          if [ $RETRY_COUNT -le 0 ]; then
            echo "PostgreSQL did not become healthy in time." >&2
            exit 1
          fi

      - name: Run migrations
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: |
          python manage.py migrate

      - name: Run tests with coverage
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db
        run: |
          coverage run --source='.' -m pytest --ds=chatbotAI.settings

      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov

      - name: Display coverage report
        run: |
          coverage report
          coverage html
